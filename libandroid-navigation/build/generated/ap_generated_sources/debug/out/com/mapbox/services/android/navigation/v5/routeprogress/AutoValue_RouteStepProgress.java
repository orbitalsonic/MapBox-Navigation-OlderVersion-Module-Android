

package com.mapbox.services.android.navigation.v5.routeprogress;

import com.mapbox.api.directions.v5.models.LegStep;

// Generated by com.google.auto.value.processor.AutoValueProcessor
 final class AutoValue_RouteStepProgress extends RouteStepProgress {

  private final double distanceRemaining;
  private final double distanceTraveled;
  private final float fractionTraveled;
  private final double durationRemaining;
  private final LegStep step;

  private AutoValue_RouteStepProgress(
      double distanceRemaining,
      double distanceTraveled,
      float fractionTraveled,
      double durationRemaining,
      LegStep step) {
    this.distanceRemaining = distanceRemaining;
    this.distanceTraveled = distanceTraveled;
    this.fractionTraveled = fractionTraveled;
    this.durationRemaining = durationRemaining;
    this.step = step;
  }

  @Override
  public double distanceRemaining() {
    return distanceRemaining;
  }

  @Override
  public double distanceTraveled() {
    return distanceTraveled;
  }

  @Override
  public float fractionTraveled() {
    return fractionTraveled;
  }

  @Override
  public double durationRemaining() {
    return durationRemaining;
  }

  @Override
  LegStep step() {
    return step;
  }

  @Override
  public String toString() {
    return "RouteStepProgress{"
         + "distanceRemaining=" + distanceRemaining + ", "
         + "distanceTraveled=" + distanceTraveled + ", "
         + "fractionTraveled=" + fractionTraveled + ", "
         + "durationRemaining=" + durationRemaining + ", "
         + "step=" + step
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RouteStepProgress) {
      RouteStepProgress that = (RouteStepProgress) o;
      return (Double.doubleToLongBits(this.distanceRemaining) == Double.doubleToLongBits(that.distanceRemaining()))
           && (Double.doubleToLongBits(this.distanceTraveled) == Double.doubleToLongBits(that.distanceTraveled()))
           && (Float.floatToIntBits(this.fractionTraveled) == Float.floatToIntBits(that.fractionTraveled()))
           && (Double.doubleToLongBits(this.durationRemaining) == Double.doubleToLongBits(that.durationRemaining()))
           && (this.step.equals(that.step()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (int) ((Double.doubleToLongBits(distanceRemaining) >>> 32) ^ Double.doubleToLongBits(distanceRemaining));
    h$ *= 1000003;
    h$ ^= (int) ((Double.doubleToLongBits(distanceTraveled) >>> 32) ^ Double.doubleToLongBits(distanceTraveled));
    h$ *= 1000003;
    h$ ^= Float.floatToIntBits(fractionTraveled);
    h$ *= 1000003;
    h$ ^= (int) ((Double.doubleToLongBits(durationRemaining) >>> 32) ^ Double.doubleToLongBits(durationRemaining));
    h$ *= 1000003;
    h$ ^= step.hashCode();
    return h$;
  }

  static final class Builder extends RouteStepProgress.Builder {
    private Double distanceRemaining;
    private Double distanceTraveled;
    private Float fractionTraveled;
    private Double durationRemaining;
    private LegStep step;
    Builder() {
    }
    @Override
    RouteStepProgress.Builder distanceRemaining(double distanceRemaining) {
      this.distanceRemaining = distanceRemaining;
      return this;
    }
    @Override
    double distanceRemaining() {
      if (distanceRemaining == null) {
        throw new IllegalStateException("Property \"distanceRemaining\" has not been set");
      }
      return distanceRemaining;
    }
    @Override
    RouteStepProgress.Builder distanceTraveled(double distanceTraveled) {
      this.distanceTraveled = distanceTraveled;
      return this;
    }
    @Override
    RouteStepProgress.Builder fractionTraveled(float fractionTraveled) {
      this.fractionTraveled = fractionTraveled;
      return this;
    }
    @Override
    RouteStepProgress.Builder durationRemaining(double durationRemaining) {
      this.durationRemaining = durationRemaining;
      return this;
    }
    @Override
    RouteStepProgress.Builder step(LegStep step) {
      if (step == null) {
        throw new NullPointerException("Null step");
      }
      this.step = step;
      return this;
    }
    @Override
    LegStep step() {
      if (step == null) {
        throw new IllegalStateException("Property \"step\" has not been set");
      }
      return step;
    }
    @Override
    RouteStepProgress autoBuild() {
      String missing = "";
      if (this.distanceRemaining == null) {
        missing += " distanceRemaining";
      }
      if (this.distanceTraveled == null) {
        missing += " distanceTraveled";
      }
      if (this.fractionTraveled == null) {
        missing += " fractionTraveled";
      }
      if (this.durationRemaining == null) {
        missing += " durationRemaining";
      }
      if (this.step == null) {
        missing += " step";
      }
      if (!missing.isEmpty()) {
        throw new IllegalStateException("Missing required properties:" + missing);
      }
      return new AutoValue_RouteStepProgress(
          this.distanceRemaining,
          this.distanceTraveled,
          this.fractionTraveled,
          this.durationRemaining,
          this.step);
    }
  }

}
