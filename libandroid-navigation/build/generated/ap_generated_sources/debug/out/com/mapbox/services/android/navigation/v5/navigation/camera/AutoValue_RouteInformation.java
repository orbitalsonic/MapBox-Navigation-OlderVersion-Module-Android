

package com.mapbox.services.android.navigation.v5.navigation.camera;

import android.location.Location;
import androidx.annotation.Nullable;
import com.mapbox.api.directions.v5.models.DirectionsRoute;
import com.mapbox.services.android.navigation.v5.routeprogress.RouteProgress;

// Generated by com.google.auto.value.processor.AutoValueProcessor
 final class AutoValue_RouteInformation extends RouteInformation {

  private final DirectionsRoute route;
  private final Location location;
  private final RouteProgress routeProgress;

  AutoValue_RouteInformation(
      @Nullable DirectionsRoute route,
      @Nullable Location location,
      @Nullable RouteProgress routeProgress) {
    this.route = route;
    this.location = location;
    this.routeProgress = routeProgress;
  }

  @Nullable
  @Override
  public DirectionsRoute route() {
    return route;
  }

  @Nullable
  @Override
  public Location location() {
    return location;
  }

  @Nullable
  @Override
  public RouteProgress routeProgress() {
    return routeProgress;
  }

  @Override
  public String toString() {
    return "RouteInformation{"
         + "route=" + route + ", "
         + "location=" + location + ", "
         + "routeProgress=" + routeProgress
        + "}";
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (o instanceof RouteInformation) {
      RouteInformation that = (RouteInformation) o;
      return ((this.route == null) ? (that.route() == null) : this.route.equals(that.route()))
           && ((this.location == null) ? (that.location() == null) : this.location.equals(that.location()))
           && ((this.routeProgress == null) ? (that.routeProgress() == null) : this.routeProgress.equals(that.routeProgress()));
    }
    return false;
  }

  @Override
  public int hashCode() {
    int h$ = 1;
    h$ *= 1000003;
    h$ ^= (route == null) ? 0 : route.hashCode();
    h$ *= 1000003;
    h$ ^= (location == null) ? 0 : location.hashCode();
    h$ *= 1000003;
    h$ ^= (routeProgress == null) ? 0 : routeProgress.hashCode();
    return h$;
  }

}
